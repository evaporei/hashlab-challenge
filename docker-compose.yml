version: '2.3'

services:
  user-postgres:
    image: postgres:9.6-alpine
    ports:
      - 5432
    env_file: ./user/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  product-postgres:
    image: postgres:9.6-alpine
    ports:
      - 5432
    env_file: ./product/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service-base:
    build:
      context: .
      dockerfile: ./user/Dockerfile
      target: user-service
    volumes:
      - ./user:/user-service
      - /user/node_modules

  user-service:
    extends: user-service-base
    env_file: ./user/.env
    ports:
      - "50051:50051"
    depends_on:
      user-postgres:
        condition: service_healthy
    links:
      - user-postgres

  user-service-test:
    extends: user-service-base
    entrypoint: npm test

  js-commons-base:
    build:
      context: .
      dockerfile: ./js-commons/Dockerfile
      target: js-commons
    volumes:
      - ./js-commons:/js-commons
      - /js-commons/node_modules

  js-commons-test:
    extends: js-commons-base
    entrypoint: npm test

  user-migrate-up:
    extends: js-commons-base
    env_file: ./user/.env
    entrypoint: node_modules/.bin/sequelize db:migrate --config src/config/sequelize.js --migrations-path /user/src/ports/sequelize/migrations/
    volumes:
      - ./user:/user
    depends_on:
      user-postgres:
        condition: service_healthy

  user-migrate-down:
    extends: js-commons-base
    env_file: ./user/.env
    entrypoint: node_modules/.bin/sequelize db:migrate:undo --config src/config/sequelize.js --migrations-path /user/src/ports/sequelize/migrations/
    volumes:
      - ./user:/user
    depends_on:
      user-postgres:
        condition: service_healthy

  user-seed-generate:
    extends: js-commons-base
    env_file: ./user/.env
    entrypoint: node_modules/.bin/sequelize db:seed:all --config src/config/sequelize.js --seeders-path /user/src/ports/sequelize/seeders/
    volumes:
      - ./user:/user
    depends_on:
      user-postgres:
        condition: service_healthy

  user-seed-destroy:
    extends: js-commons-base
    env_file: ./user/.env
    entrypoint: node_modules/.bin/sequelize db:seed:undo --config src/config/sequelize.js --seeders-path /user/src/ports/sequelize/seeders/
    volumes:
      - ./user:/user
    depends_on:
      user-postgres:
        condition: service_healthy

  product-service-base:
    build:
      context: .
      dockerfile: ./product/Dockerfile
      target: product-service
    volumes:
      - ./product:/product-service
      - /product/node_modules

  product-service:
    extends: product-service-base
    env_file: ./product/.env
    ports:
      - "3000:3000"
    depends_on:
      product-postgres:
        condition: service_healthy
    links:
      - product-postgres

  product-service-test:
    extends: product-service-base
    entrypoint: npm test

  product-migrate-up:
    extends: js-commons-base
    env_file: ./product/.env
    entrypoint: node_modules/.bin/sequelize db:migrate --config src/config/sequelize.js --migrations-path /product/src/ports/sequelize/migrations/
    volumes:
      - ./product:/product
    depends_on:
      product-postgres:
        condition: service_healthy

  product-migrate-down:
    extends: js-commons-base
    env_file: ./product/.env
    entrypoint: node_modules/.bin/sequelize db:migrate:undo --config src/config/sequelize.js --migrations-path /product/src/ports/sequelize/migrations/
    volumes:
      - ./product:/product
    depends_on:
      product-postgres:
        condition: service_healthy

  product-seed-generate:
    extends: js-commons-base
    env_file: ./product/.env
    entrypoint: node_modules/.bin/sequelize db:seed:all --config src/config/sequelize.js --seeders-path /product/src/ports/sequelize/seeders/
    volumes:
      - ./product:/product
    depends_on:
      product-postgres:
        condition: service_healthy

  product-seed-destroy:
    extends: js-commons-base
    env_file: ./product/.env
    entrypoint: node_modules/.bin/sequelize db:seed:undo --config src/config/sequelize.js --seeders-path /product/src/ports/sequelize/seeders/
    volumes:
      - ./product:/product
    depends_on:
      product-postgres:
        condition: service_healthy
